/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: holy_graph
@author: 
@tags: []
@addedOn: 2025-03-30
*/
const melody = tune`
309.2783505154639: D4^309.2783505154639,
309.2783505154639: C4~309.2783505154639 + D4~309.2783505154639 + A4~309.2783505154639,
309.2783505154639: D4^309.2783505154639,
309.2783505154639: D4~309.2783505154639 + C4~309.2783505154639,
309.2783505154639: E4^309.2783505154639 + D5~309.2783505154639,
309.2783505154639: D4-309.2783505154639 + C5~309.2783505154639,
309.2783505154639: E4^309.2783505154639 + D4^309.2783505154639 + B4~309.2783505154639,
309.2783505154639: D4-309.2783505154639 + C5~309.2783505154639,
309.2783505154639: E4^309.2783505154639 + D4^309.2783505154639 + D5~309.2783505154639,
309.2783505154639: D4-309.2783505154639,
309.2783505154639: D4^309.2783505154639 + E4^309.2783505154639,
309.2783505154639: C4-309.2783505154639 + E5~309.2783505154639,
309.2783505154639: D4-309.2783505154639 + E5~309.2783505154639,
309.2783505154639: E4-309.2783505154639,
309.2783505154639: E4^309.2783505154639 + D4-309.2783505154639,
309.2783505154639: C4-309.2783505154639,
309.2783505154639: D4~309.2783505154639 + E4~309.2783505154639 + E5~309.2783505154639 + B4~309.2783505154639,
309.2783505154639: E4^309.2783505154639 + B4~309.2783505154639,
309.2783505154639: E4~309.2783505154639 + D4~309.2783505154639,
309.2783505154639: F4^309.2783505154639,
309.2783505154639: E4-309.2783505154639 + E5~309.2783505154639,
309.2783505154639: F4^309.2783505154639 + E4^309.2783505154639,
309.2783505154639: E4-309.2783505154639,
309.2783505154639: F4^309.2783505154639 + E4^309.2783505154639,
309.2783505154639: E4-309.2783505154639 + A5~309.2783505154639,
309.2783505154639: F4^309.2783505154639 + E4^309.2783505154639 + G5~309.2783505154639,
309.2783505154639: E4-309.2783505154639 + D4-309.2783505154639 + F5~309.2783505154639,
309.2783505154639: E4-309.2783505154639 + F4-309.2783505154639 + G4-309.2783505154639 + F5~309.2783505154639,
309.2783505154639: F4-309.2783505154639 + E5~309.2783505154639,
309.2783505154639: E4-309.2783505154639 + F4^309.2783505154639 + D5~309.2783505154639,
309.2783505154639: D4-309.2783505154639 + C5~309.2783505154639,
309.2783505154639: C4-309.2783505154639 + C5~309.2783505154639`
const playback = playTune(melody, Infinity)

const student = "s"
const player = "p"
const track = "t"
const bg = "b"
const lvl = "l"
const blank = "w"
const letterA = "A"
const letterB = "B"
const letterC = "C"
const letterD = "D"
const letterE = "E"
const letterF = "F"
const letterG = "G"
const letterH = "H"
const letterI = "I"
const letterJ = "J"
const letterK = "K"
const letterL = "L"
const letterM = "M"
const letterN = "N"
const letterO = "O"
const letterP = "P"
const letterQ = "Q"
const letterR = "R"
const letterS = "S"
const letterT = "T"
const letterU = "U"
const letterV = "V"
const letterW = "W"
const letterX = "X"
const letterY = "Y"
const letterZ = "Z"
const blue_square = "p"
const green_square = "g"
const red_square = "e"
const rocket = "r"
// const spaceship = "s"
const up = "u"
const right = "z"
const left = "y"


setLegend(
  [ student, bitmap`
3333333333333333
3333333333333333
9999999999999999
9999999999999999
6666666666666666
6666666666666666
4444444444444444
4444444444444444
7777777777777777
7777777777777777
5555555555555555
5555555555555555
HHHHHHHHHHHHHHHH
HHHHHHHHHHHHHHHH
................
................` ],
  [ player, bitmap`
3333333333333333
3333333333333333
9999999999999999
9999999999999999
6666666666666666
6666666666666666
4444444444444444
4444444444444444
7777777777777777
7777777777777777
5555555555555555
5555555555555555
HHHHHHHHHHHHHHHH
HHHHHHHHHHHHHHHH
................
................` ],
  [ blank, bitmap`
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222
2222222222222222` ],
  [ bg, bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000` ],
    [ lvl, bitmap`
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777000000007777
7777000000007777
7777000000007777
7777000000007777
7777000000007777
7777000000007777
7777000000007777
7777000000007777
7777777777777777
7777777777777777
7777777777777777
7777777777777777` ],
    [ track, bitmap`
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777
7777777777777777` ],
[letterA, bitmap`
0000000000000000
0000033333300000
0000033333300000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000333333330000
0000333333330000
0000330000330000
0000330000330000
0000330000330000
0000000000000000`],
  [letterB, bitmap`
0000000000000000
0000333333000000
0000333333300000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000333333300000
0000333333300000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000333333300000
0000333333000000
0000000000000000`],
  [letterC, bitmap`
0000000000000000
0000033333330000
0000333333333000
0003330000033000
0003300000000000
0003300000000000
0003300000000000
0003300000000000
0003300000000000
0003300000000000
0003300000000000
0003300000000000
0003330000033000
0000333333333000
0000033333330000
0000000000000000`],
  [letterD, bitmap`
0000000000000000
0000333330000000
0000333333300000
0000330003330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330003330000
0000333333300000
0000333330000000
0000000000000000`],
  [letterE, bitmap`
0000000000000000
0000333333330000
0000333333330000
0000330000000000
0000330000000000
0000330000000000
0000333333300000
0000333333300000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000333333330000
0000333333330000
0000000000000000`],
  [letterF, bitmap`
0000000000000000
0000333333330000
0000333333330000
0000330000000000
0000330000000000
0000330000000000
0000333333300000
0000333333300000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000000000000000`],
  [letterG, bitmap`
0000000000000000
0000033333330000
0000333333333000
0003330000033000
0003300000033000
0003300000000000
0003300000000000
0003300000000000
0003300003333000
0003300003333000
0003300000033000
0003330000033000
0003333000333000
0000333333333000
0000033333330000
0000000000000000`],
  [letterH, bitmap`
0000000000000000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000333333330000
0000333333330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000000000000000`],
  [letterI, bitmap`
0000000000000000
0000033333300000
0000033333300000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000033333300000
0000033333300000
0000000000000000`],
  [letterJ, bitmap`
0000000000000000
0000033333300000
0000033333300000
0000000033000000
0000000033000000
0000000033000000
0000000033000000
0000000033000000
0000000033000000
0000033033000000
0000033033000000
0000033033000000
0000033333000000
0000033333000000
0000003330000000
0000000000000000`],
  [letterK, bitmap`
0000000000000000
0003300000033000
0003300000333000
0003300003330000
0003300033300000
0003300333000000
0003303330000000
0003333300000000
0003333300000000
0003303330000000
0003300333000000
0003300033300000
0003300003330000
0003300000333000
0003300000033000
0000000000000000`],
  [letterL, bitmap`
0000000000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000333333330000
0000333333330000
0000000000000000`],
  [letterM, bitmap`
0000000000000000
0003330000333000
0003333003333000
0003333333333000
0003303333033000
0003300330033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0000000000000000`],
  [letterN, bitmap`
0000000000000000
0003300000033000
0003300000033000
0003330000033000
0003333000033000
0003333300033000
0003303330033000
0003300333033000
0003300033333000
0003300003333000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0000000000000000`],
  [letterO, bitmap`
0000000000000000
0000033333300000
0000333333330000
0003330000333000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003330000333000
0000333333330000
0000033333300000
0000000000000000`],
  [letterP, bitmap`
0000000000000000
0000333333300000
0000333333330000
0000330003330000
0000330000330000
0000330000330000
0000330003330000
0000333333330000
0000333333300000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000330000000000
0000000000000000`],
  [letterQ, bitmap`
0000000000000000
0000033333300000
0000333333330000
0000333003330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000333003330000
0000333333330000
0000033333300000
0000000003330000
0000000000330000
0000000000000000`],
  [letterR, bitmap`
0000000000000000
0000333333300000
0000333333330000
0000330000330000
0000330000330000
0000330000330000
0000330000330000
0000333333330000
0000333333300000
0000333300000000
0000333330000000
0000330333000000
0000330033300000
0000330003330000
0000330000330000
0000000000000000`],
  [letterS, bitmap`
0000000000000000
0000333333330000
0003333333333000
0003300000033000
0003300000033000
0003300000000000
0003300000000000
0003333333330000
0000333333333000
0000000000033000
0000000000033000
0003300000033000
0003300000033000
0003333333333000
0000333333330000
0000000000000000`],
  [letterT, bitmap`
0000000000000000
0000333333330000
0000333333330000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000000000000`],
  [letterU, bitmap`
0000000000000000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003330000333000
0000333333330000
0000333333330000
0000000000000000`],
  [letterV, bitmap`
0000000000000000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003330000333000
0000333003330000
0000033333300000
0000003333000000
0000000000000000`],
  [letterW, bitmap`
0000000000000000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003300330033000
0003300330033000
0003300330033000
0003300330033000
0003300330033000
0003333333333000
0000333333330000
0000033003300000
0000000000000000`],
  [letterX, bitmap`
0000000000000000
0003300000033000
0003300000033000
0003300000033000
0003300000033000
0003330000333000
0000333003330000
0000033333300000
0000003333000000
0000033333300000
0000333003330000
0003330000333000
0003300000033000
0003300000033000
0003300000033000
0000000000000000`],
  [letterY, bitmap`
0000000000000000
0003300000033000
0003300000033000
0003330000333000
0000333003330000
0000033333300000
0000003333000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000330000000
0000000000000000`],
  [letterZ, bitmap`
0000000000000000
0003333333333000
0003333333333000
0000000000033000
0000000000333000
0000000003330000
0000000033300000
0000000333000000
0000003330000000
0000033300000000
0000333000000000
0003330000000000
0003300000000000
0003333333333000
0003333333333000
0000000000000000`],
  [blue_square, bitmap`
22222222222222222
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
27777777777777772
22222222222222222`],
  [red_square, bitmap`
22222222222222222
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
23333333333333332
22222222222222222`],
  [green_square, bitmap`
22222222222222222
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
24444444444444442
22222222222222222`],
  [rocket, bitmap`
22222222222222222
28888888888888882
28222222222222282
28333333333333382
28299999999999282
28226666666662282
28222444444422282
28222277777222282
28222225552222282
28222222H22222282
28222222H22222282
28222222222222282
28222222222222282
28222222222222282
28888888888888882
22222222222222222`],
//   [spaceship, bitmap`
// 22222222222222222
// 23333333333333332
// 23233333233333232
// 23323333233332332
// 23332333233323332
// 23333233233233332
// 23333323232333332
// 23333332223333332
// 23222222322222232
// 23333332223333332
// 23333323232333332
// 23333233233233332
// 23332333233323332
// 23323333233332332
// 23233333233333232
// 23333333333333332
// 22222222222222222`],
  [up, bitmap`
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
2222222..22222222
2222222..22222222
2222222..22222222
2222222..22222222
2222222..22222222
2222222..22222222
22222222222222222
22222222222222222
22222222222222222`],
  [right, bitmap`
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222`],
  [left, bitmap`
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222
22222222222222222`],
);

setSolids([])

/*
Level 0 = Welcome & help screen
Level 2 = Game screen
Level 3 = Game
Level 4 = Blackhole
*/

let level = 0
const levels = [
  map`
bbbbbbbbbbbbbbbbbbbbbbbb`, 
  map`
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbttttttttbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbtttbbbbbbtttbbbbbbbbbbbbbb
bbbbbbbbbbbtltbbbttttbbbtttbbbbbbbbbbbb
bbbbbbbbbbttbbbttlbbtttbbbttbbbbbbbbbbb
bbbbbbbbbbtbbtttbbbbbbtttbblbbbbbbbbbbb
bbbbbbbbbttbbtbbbbttbbbbtbbttbbbbbbbbbb
bbbbbbbbbtbbttbbttttttbbttbbtbbbbbbbbbb
bbbbbbbbttbbpbbblbbbbtbbbtbbttbbbbbbbbb
bbbbbbbbtbbttbbttbbbbttbbttbbtbbbbbbbbb
bbbbbbbttbbtbbbtbbttbblbbbtbbttbbbbbbbb
bbbbbbbttbbtbbbtbbltbbtbbbtbbttbbbbbbbb
bbbbbbbbtbbttbbttbbbbttbbttbbtbbbbbbbbb
bbbbbbbbttbbtlbbtbbbbtbbblbbttbbbbbbbbb
bbbbbbbbbtbbttbbttttttbbttbbttbbbbbbbbb
bbbbbbbbbttbbtbbbbtlbbbbtbbttbbbbbbbbbb
bbbbbbbbbblbbtttbbbbbbtttbbtbbbbbbbbbbb
bbbbbbbbbbttbbbtttbbtttbbbttbbbbbbbbbbb
bbbbbbbbbbbtttbbbttttbbbttlbbbbbbbbbbbb
bbbbbbbbbbbbbtttbbbbbbtttbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbttttttttbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb`, 
    map`
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbttttttttbbbbbbbbbbbbbbbb
bbbbbbbbbbbtltttbbbbbbtttltbbbbbbbbbbbb
bbbbbbbbbtttbbbbbttttbbbbbtttbbbbbbbbbb
bbbbbbbtttbbbttttlbbtttttbbbtttbbbbbbbb
bbbbbbttbbbtttbbbbbbbbbbtttbbbttbbbbbbb
bbbbbbtbbttlbbbtlttttttbbbtttbbtbbbbbbb
bbbbbttbttbbbtttbbbbbbtttbbbltbttbbbbbb
bbbbbtbbtbbtttbbbttttbbbtttbbtbbtbbbbbb
bbbbttbttbttbbbttlbbtttbbbttbttbttbbbbb
bbbbtbbtbbtbbtttbbbbbbtttbblbbtbbtbbbbb
bbbttbttbttbbtbbbbttbbbbtbbttbttbttbbbb
bbbtbblbbtbbttbbttttttbbttbbtbbtbbtbbbb
bbbtbttbttbbtbbblbbbbtbbbtbbttbttbtbbbb
bbttbtbbtbbttbbttbbbbttbbttbbtbbtbttbbb
bbltbtbttbbtbbbtbbttbblbbbtbbttbtbtlbbb
bbttbtbttbbtbbbtbbltbbtbbbtbbttbtbttbbb
bbttbtbbtbbttbbttbbbbttbbttbbtbbtbttbbb
bbbtbttbttbbtlbbtbbbbtbbblbbttbttbtbbbb
bbbtbbtbbtbbttbbttttttbbttbbtbbtbbtbbbb
bbbttbttbttbbtbbbbtlbbbbtbbttbtlbttbbbb
bbbbtbbtbblbbtttbbbbbbtttbbtbbtbbtbbbbb
bbbbttbttbttbbbtttbbtttbbbttbttbttbbbbb
bbbbbtbbtbbtttbbbttttbbbttlbbtbbtbbbbbb
bbbbbttbttbbbtttbbbbbbtttbbbttbttbbbbbb
bbbbbbtbblttbbbttttttttbbbtttbbtbbbbbbb
bbbbbbttbbbtttbbbbbbbbbbttlbbbttbbbbbbb
bbbbbbbtttbbbtttttbbtttttbbbtttbbbbbbbb
bbbbbbbbbtttbbbbbttttbbbbbtttbbbbbbbbbb
bbbbbbbbbbbtttttbbbbbbtttttbbbbbbbbbbbb
bbbbbbbbbbbbbbbttttltttbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb`, 
    map`
.............
wwwwwwrwwwwww
wwwwwwtwwwwww
wwwwwwewwwwww
wwwwwwtwwwwww
wwwwwwgwwwwww
wwwwwwtwwwwww
wwwwwwgwwwwww
wwwwwwswwwwww
wwwwwwwwwwwww
.............`, 
  map`
bbbbbbbbbbbbbbbb
bbYOUbVEbBEENbbb
bbbbbbbbbbbbbbbb
bbABSORBEDbBYbbb
bbbbbbbbbbbbbbbb
bTHEbBLACKbHOLEb
bbbbbbbbbbbbbbbb`, 
]

let isMuted = false; // Variable to track if any melody is muted

onInput("k", () => {
  if (isMuted == false) {
    playback.end(); // Mute all music
    isMuted = true; // Set the isMuted flag to true
  }
  // else if (isMuted == true) {
  //   // playback(); // Unmute all music
  //   playTune(melody, Infinity);
  //   // const playback = playTune(melody, Infinity);
  //   isMuted = false; // Set the isMuted flag to false
  // }
})

addText(              "Welcome to the Holy", { y: 3, color: color`7` });
addText(              "Graph! Try your best", { y: 5, color: color`7` });
addText(              "to finish the core!", { y: 7, color: color`7` });
addText(              "Press \"l\" to start", { y: 11, color: color`7` });
addText(              "Press \"i\" for help", { y: 13, color: color`7` });

onInput("i", () => {
  if (start_game == false) {
    start_game = true;
    clearText();
    addText(              "Collect all the ", { y: 1, color: color`7` });
    addText(              "projects from the", { y: 3, color: color`7` });
    addText(              "current circle", { y: 5, color: color`7` });
    addText(              "before", { y: 7, color: color`7` });
    addText(              "you get blackholed!", { y: 9, color: color`7` });
    addText(              "Press \"k\" to mute", { y: 12, color: color`7` });
    // addText(              "mute music \\ ", { y: 13, color: color`7` });
    addText(              "Press \"l\" to start", { y: 14, color: color`7` });
    setMap(levels[level])
  }
})
let start_game = false;

// onInput("l", () => {
//   if (start_game == false) {
//     start_game = true;
//     level = 2
//     clearText();
//     setMap(levels[level])
//     // Spawn a new player sprite at position (0, 0)
//     addSprite(19, 15, student);
//   }
// })

setBackground("t")

setSolids([ student, bg ]);

setPushables({
  [student]: [lvl]
});

onInput("w", () => {
  getFirst(student).y -= 1;
});

onInput("a", () => {
  getFirst(student).x -= 1;
});

onInput("s", () => {
  getFirst(student).y += 1; 
});

onInput("d", () => {
  getFirst(student).x += 1;
});

let all_collected = 0
let position_x = 0
let position_y = 0
let timeLeft = 120; // Set the initial time limit to 120 seconds

// Display the time left on the screen

// Function to update timer every second
const timerInterval = setInterval(() => {
  // Check if the level is 0 and set the timer to 120
  if (level == 2 && all_collected < 23) {
    timeLeft -= 1; // Decrement time left by 1 second
    // Update the displayed time
    clearText();
    addText(`Days Left: ${timeLeft+1}`, { x: 3, y: 1, color: color`3` })
  }
  if (timeLeft < 0 && level < 4) {
    level = 4; // Set level to 4 if time runs out before reaching level 2
    setMap(levels[level]); // Load level 4
  }
}, 1000); // Update timer every second

// afterInput(() => {
//   const targetNumber = tilesWith(lvl).length;
  
//   const numberCovered = tilesWith(lvl).length;

//   // addText(numMoves.toString(), {
//   //   x: 1,
//   //   y: 14,
//   //   color: color`3`
//   // })

//   if (getFirst(player)=== targetNumber) {
//     playTune(winSFX);
//     level++;
//   }
//   if (numberCovered === 1) {
//     playTune(winSFX);
//     level++;
  
//   //   clearText();
    
//   //   addText(numMoves.toString(), {
//   //     x: 1,
//   //     y: 14,
//   //     color: color`3`
//     }
//     // )
    
//     const currentLevel = levels[level];

// //     if (currentLevel !== undefined) {
// //       setMap(currentLevel);
// //       // Fun hack to start the level with a cheese already on a goal
// //       if (level == 3) { 
// //         addSprite(7, 3, "c")
// //       }
// //       if (level == 9) {
// //         addSprite(5, 4, "c")
// //       }
// //       if (level == 10) {
// //         clearText();
// //       }
// //     } else {
// //       clearText();
// //       addText("you win!", { y: 5, color: color`6` });
// //     }
//   // }
// })

setMap(levels[level])

setPushables({
  [ student ]: []
})


onInput("l", () => {
  if (start_game == false) {
    start_game = true;
    level = 2
    clearText();
    setMap(levels[level])
    // Spawn a new player sprite at position (0, 0)
    addSprite(19, 15, student);
  }
  
// })
// afterInput(() => {
  // if (level === 2) {
  const playerSprite = getFirst(student)
  const playerX = playerSprite.x
  const playerY = playerSprite.y
  // const allLevels = getAll(lvl);
  //   for (const fruit of fruitsInGame) {
  //     if (fruit.x === playerSprite.x && fruit.y === playerSprite.y) {
  
  const touchedproject = getTile(playerX, playerY).some(sprite => sprite.type === lvl)
  if (touchedproject) {
    all_collected += 1;
    // lvl.remove();
    
    // removeSprite(touchedProject);
    position_x = getFirst(student).x;
    position_y = getFirst(student).y;
    clearTile(position_x, position_y);
    addSprite(position_x, position_y, "s");
    addSprite(position_x, position_y, "p");
    
    if (all_collected === 1) {
      // getFirst(student).y -= 10; 
      getFirst(student).x -= 3;
      // clearText();
      }
    if (all_collected === 4) {
     if (position_x === 16 && position_y === 13) //ok
     {
      getFirst(student).y -= 0; 
      getFirst(student).x -= 4;
     }
      else if (position_x === 22 && position_y === 15) //ok
      {
      // getFirst(student).y += 4; 
      getFirst(student).x += 4;
      // clearText();
      }
      else if (position_x === 19 && position_y === 20) //ok
      {
      getFirst(student).y -= 0; 
      getFirst(student).x += 5;
      // clearText();
      }
      }
    if (all_collected === 7) {
     if (position_x === 25 && position_y === 18) //ok
     {
      getFirst(student).y -= 0; 
      getFirst(student).x += 4;
     }
     else if (position_x === 13 && position_y === 18) //ok
     {
      getFirst(student).y += 0; 
      getFirst(student).x -= 5;
      // clearText();
     }
     else if (position_x === 17 && position_y === 9) //ok
      {
      getFirst(student).y -= 3; 
      // console.log("Sprites at new position:", getTile(studentSprite.x, studentSprite.y));
      // getFirst(student).x -= 7;
      // clearText();
      }
      }
    if (all_collected === 11) {
     if (position_x === 10 && position_y === 21) //ok
     {
      getFirst(student).y -= 1; 
      getFirst(student).x -= 3;
     }
      else if (position_x === 26 && position_y === 23) //ok
      {
      getFirst(student).y -= 1; 
      getFirst(student).x += 3;
      // clearText();
      }
      else if (position_x === 27 && position_y === 10) //ok
      {
      getFirst(student).y -= 0; 
      getFirst(student).x += 3;
      // clearText();
      }
      else if (position_x === 16 && position_y === 6) //corrected
      {
      getFirst(student).y -= 2; 
      getFirst(student).x -= 2;
      // clearText();
      }
      }
    if (all_collected === 18) {
     if (position_x === 9 && position_y === 25) //ok
     {
      // getFirst(student).y -= 1; 
      getFirst(student).x -= 3;
     }
      else if (position_x === 26 && position_y === 26) //ok
      {
      getFirst(student).y -= 2; 
      // getFirst(student).x -= 3;
      // clearText();
      }
      else if (position_x === 31 && position_y === 20) //ok
      {
      getFirst(student).y -= 0; 
      getFirst(student).x += 3;
      // clearText();
      }
      else if (position_x === 28 && position_y === 7) //ok
      {
      getFirst(student).y -= 0; 
      getFirst(student).x += 3;
      // clearText();
      }
      else if (position_x === 17 && position_y === 4) //ok
      {
      getFirst(student).y -= 2;
      getFirst(student).x -= 2;
      // clearText();
      }
      else if (position_x === 11 && position_y === 6) //ok
      {
      getFirst(student).y -= 3; 
      // getFirst(student).x += 3;
      // clearText();
      }
      else if (position_x === 6 && position_y === 12) //ok
      {
      getFirst(student).y -= 1; 
      getFirst(student).x -= 3;
      // clearText();
      }
      }
    
    // Log the current position of the player sprite
console.log("Player Position - X:", getFirst(student).x, "Y:", getFirst(student).y);
    if (all_collected === 23) {
      level = 0;
      setMap(levels[level])
       addText(`Brilliant, \nwhat a fun,\n you're expert!`, { x: 1, y: 6, color: color`4` }) 
    }
    else {
    addText(`projects done: ${all_collected} of 23`, { x: 1, y: 14, color: color`2` })
    }
    // addText(`p pos x: ${position_x}`, { x: 1, y: 8, color: color`2` })
    // addText(`p pos y: ${position_y}`, { x: 1, y: 10, color: color`2` })
    }
  // }
})
